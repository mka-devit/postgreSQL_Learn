CREATE TABLE comic_hero (
    id INT,
    name VARCHAR(100),
    align VARCHAR(30),
    eye VARCHAR(30),
    hair VARCHAR(30),
    gender VARCHAR(30),
    appearances INT,
    year INT,
    universe VARCHAR(10)
);

/*
В реляционной базе данных таблица имеет название
И столбцы или атрибуты
И каждый столбец имеет название или идентификатор
Что-бы создать таблицу используют оператор `CREATE TABLE`
_________________________________________________________________________________
Разберем таблицу
`CREATE TABLE comic_hero ();` - после `CREATE TABLE` указывается название таблицы
`();` - далее в скобочках аказываются столбцы и тип столбца
`INT` - целое число
`VARCHAR` - строка переменной длины
_________________________________________________________________________________
Числовые
- `INT` / `INTEGER` – целые числа
- `SMALLINT` – маленькие целые числа
- `BIGINT` – большие целые числа
- `SERIAL` / `BIGSERIAL` – автоинкрементные числа (только в PostgreSQL)
- `DECIMAL(p, s)` / `NUMERIC(p, s)` – точные числа с фиксированной запятой
- `FLOAT` / `REAL` / `DOUBLE PRECISION` – числа с плавающей запятой
Строковые
- `VARCHAR(n)` – строка ограниченной длины (например, `VARCHAR(255)`)
- `CHAR(n)` – строка фиксированной длины (дополняется пробелами)
- `TEXT` – неограниченный текст (в PostgreSQL)
Дата и время
- `DATE` – дата (год, месяц, день)
- `TIME` – время (часы, минуты, секунды)
- `TIMESTAMP` – дата и время
- `TIMESTAMPTZ` – дата и время с учётом часового пояса
- `INTERVAL` – временной интервал
Булевы (логические)
- `BOOLEAN` – `TRUE`, `FALSE`, `NULL`
Двоичные данные
- `BYTEA` – хранение бинарных данных (например, изображения, файлы)
JSON и XML (в PostgreSQL)
- `JSON` / `JSONB` – хранение JSON-данных
- `XML` – хранение XML-данных
Cпециальные типы PostgreSQL
- `UUID` – уникальный идентификатор
- `ARRAY` – массив данных (например, `INT[]`)
- `HSTORE` – ключ-значение (похож на JSON)
- `CIDR`, `INET`, `MACADDR` – для хранения IP-адресов и MAC-адресов
- `GEOMETRY` / `GEOGRAPHY` – для работы с геоданными (PostGIS)
